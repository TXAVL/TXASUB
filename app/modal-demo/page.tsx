"use client"

import { useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { useTXAModal } from "@/components/modal-integration"
import { ModalIntegration } from "@/components/modal-integration"

export default function ModalDemoPage() {
  const modal = useTXAModal()
  const [result, setResult] = useState<string>("")

  const showResult = (text: string) => {
    setResult(text)
    setTimeout(() => setResult(""), 5000)
  }

  return (
    <>
      <ModalIntegration />
      <div className="max-w-4xl mx-auto px-4 py-8">
        <Card>
          <CardHeader>
            <CardTitle className="text-2xl font-bold">üöÄ TXA Modal Demo</CardTitle>
          </CardHeader>
          <CardContent className="space-y-6">
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              <Button
                onClick={async () => {
                  const confirmed = await modal.showConfirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën th·ª±c hi·ªán h√†nh ƒë·ªông n√†y?")
                  showResult(`Confirm: ${confirmed}`)
                }}
                className="w-full"
              >
                Confirm
              </Button>

              <Button
                onClick={async () => {
                  await modal.showAlert("ƒê√¢y l√† th√¥ng b√°o th√¥ng th∆∞·ªùng")
                  showResult("Alert: User clicked OK")
                }}
                variant="outline"
                className="w-full"
              >
                Alert
              </Button>

              <Button
                onClick={async () => {
                  const confirmed = await modal.showWarning("C·∫£nh b√°o: H√†nh ƒë·ªông n√†y c√≥ th·ªÉ g√¢y h·∫≠u qu·∫£!")
                  showResult(`Warning: ${confirmed}`)
                }}
                className="w-full bg-yellow-500 hover:bg-yellow-600"
              >
                Warning
              </Button>

              <Button
                onClick={async () => {
                  const confirmed = await modal.showDanger("Nguy hi·ªÉm: B·∫°n s·∫Øp x√≥a d·ªØ li·ªáu quan tr·ªçng!")
                  showResult(`Danger: ${confirmed}`)
                }}
                className="w-full bg-red-500 hover:bg-red-600"
              >
                Danger
              </Button>

              <Button
                onClick={async () => {
                  await modal.showSuccess("Th√†nh c√¥ng: D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c l∆∞u!")
                  showResult("Success: User clicked OK")
                }}
                className="w-full bg-green-500 hover:bg-green-600"
              >
                Success
              </Button>

              <Button
                onClick={async () => {
                  const confirmed = await modal.showCustom({
                    title: "Modal T√πy ch·ªânh",
                    subtitle: "V·ªõi subtitle v√† icon custom",
                    message: "ƒê√¢y l√† modal v·ªõi nhi·ªÅu t√πy ch·ªçn t√πy ch·ªânh. B·∫°n c√≥ th·ªÉ thay ƒë·ªïi icon, m√†u s·∫Øc, v√† n·ªôi dung.",
                    type: "info",
                    icon: "üéØ",
                    confirmText: "T√πy ch·ªânh OK",
                    cancelText: "T√πy ch·ªânh Cancel"
                  })
                  showResult(`Custom: ${confirmed}`)
                }}
                variant="outline"
                className="w-full"
              >
                Custom Modal
              </Button>

              <Button
                onClick={async () => {
                  const result = await modal.showAsync(
                    "Th·ª±c hi·ªán thao t√°c b·∫•t ƒë·ªìng b·ªô?",
                    "Async Operation",
                    async () => {
                      // Simulate API call
                      await new Promise(resolve => setTimeout(resolve, 3000))
                      return { success: true, data: "Operation completed" }
                    }
                  )
                  showResult(`Async: ${JSON.stringify(result)}`)
                }}
                className="w-full bg-blue-500 hover:bg-blue-600"
              >
                Async Operation
              </Button>

              <Button
                onClick={() => {
                  modal.showProgress("ƒêang x·ª≠ l√Ω d·ªØ li·ªáu...", "Processing")
                  
                  // Simulate progress
                  setTimeout(() => {
                    modal.hide()
                    modal.showSuccess("Ho√†n th√†nh!")
                  }, 2000)
                  
                  showResult("Progress: Started")
                }}
                className="w-full bg-purple-500 hover:bg-purple-600"
              >
                Progress Modal
              </Button>

              <Button
                onClick={async () => {
                  const confirmed = await modal.showCustom({
                    title: "Modal Kh√¥ng c√≥ Cancel",
                    message: "Modal n√†y ch·ªâ c√≥ n√∫t OK, kh√¥ng c√≥ n√∫t Cancel.",
                    type: "info",
                    confirmText: "OK",
                    cancelText: null
                  })
                  showResult(`No Cancel: ${confirmed}`)
                }}
                variant="outline"
                className="w-full"
              >
                No Cancel Button
              </Button>
            </div>

            {result && (
              <div className="mt-6 p-4 bg-green-50 border border-green-200 rounded-lg">
                <p className="text-green-800 font-medium">Result: {result}</p>
              </div>
            )}

            <div className="mt-8 p-4 bg-gray-50 rounded-lg">
              <h3 className="font-semibold mb-2">üí° Code Examples:</h3>
              <div className="space-y-2 text-sm">
                <div className="bg-white p-3 rounded border">
                  <code className="text-blue-600">
                    const result = await modal.showConfirm("B·∫°n c√≥ ch·∫Øc ch·∫Øn?")
                  </code>
                </div>
                <div className="bg-white p-3 rounded border">
                  <code className="text-blue-600">
                    await modal.showAlert("Th√¥ng b√°o quan tr·ªçng")
                  </code>
                </div>
                <div className="bg-white p-3 rounded border">
                  <code className="text-blue-600">
                    const result = await modal.showCustom({`{`}
                    <br />
                    &nbsp;&nbsp;title: "Custom Title",
                    <br />
                    &nbsp;&nbsp;message: "Custom message",
                    <br />
                    &nbsp;&nbsp;type: "info",
                    <br />
                    &nbsp;&nbsp;icon: "üéØ"
                    <br />
                    {`}`})
                  </code>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>
    </>
  )
}